// Code generated by protoc-gen-go.
// source: mesos/docker/v2.proto
// DO NOT EDIT!

/*
Package docker_spec_v2 is a generated protocol buffer package.

It is generated from these files:
	mesos/docker/v2.proto

It has these top-level messages:
	ImageManifest
*/
package v2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import docker_spec_v1 "mesos/docker"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// *
// Protobuf for the Docker v2 image manifest JSON schema:
// https://github.com/docker/distribution/blob/master/docs/spec/manifest-v2-1.md
type ImageManifest struct {
	Name             *string                    `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Tag              *string                    `protobuf:"bytes,2,req,name=tag" json:"tag,omitempty"`
	Architecture     *string                    `protobuf:"bytes,3,req,name=architecture" json:"architecture,omitempty"`
	FsLayers         []*ImageManifest_FsLayer   `protobuf:"bytes,4,rep,name=fsLayers" json:"fsLayers,omitempty"`
	History          []*ImageManifest_History   `protobuf:"bytes,5,rep,name=history" json:"history,omitempty"`
	SchemaVersion    *uint32                    `protobuf:"varint,6,req,name=schemaVersion" json:"schemaVersion,omitempty"`
	Signatures       []*ImageManifest_Signature `protobuf:"bytes,7,rep,name=signatures" json:"signatures,omitempty"`
	XXX_unrecognized []byte                     `json:"-"`
}

func (m *ImageManifest) Reset()                    { *m = ImageManifest{} }
func (m *ImageManifest) String() string            { return proto.CompactTextString(m) }
func (*ImageManifest) ProtoMessage()               {}
func (*ImageManifest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ImageManifest) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *ImageManifest) GetTag() string {
	if m != nil && m.Tag != nil {
		return *m.Tag
	}
	return ""
}

func (m *ImageManifest) GetArchitecture() string {
	if m != nil && m.Architecture != nil {
		return *m.Architecture
	}
	return ""
}

func (m *ImageManifest) GetFsLayers() []*ImageManifest_FsLayer {
	if m != nil {
		return m.FsLayers
	}
	return nil
}

func (m *ImageManifest) GetHistory() []*ImageManifest_History {
	if m != nil {
		return m.History
	}
	return nil
}

func (m *ImageManifest) GetSchemaVersion() uint32 {
	if m != nil && m.SchemaVersion != nil {
		return *m.SchemaVersion
	}
	return 0
}

func (m *ImageManifest) GetSignatures() []*ImageManifest_Signature {
	if m != nil {
		return m.Signatures
	}
	return nil
}

type ImageManifest_FsLayer struct {
	BlobSum          *string `protobuf:"bytes,1,req,name=blobSum" json:"blobSum,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ImageManifest_FsLayer) Reset()                    { *m = ImageManifest_FsLayer{} }
func (m *ImageManifest_FsLayer) String() string            { return proto.CompactTextString(m) }
func (*ImageManifest_FsLayer) ProtoMessage()               {}
func (*ImageManifest_FsLayer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *ImageManifest_FsLayer) GetBlobSum() string {
	if m != nil && m.BlobSum != nil {
		return *m.BlobSum
	}
	return ""
}

type ImageManifest_History struct {
	V1Compatibility *string `protobuf:"bytes,1,req,name=v1Compatibility" json:"v1Compatibility,omitempty"`
	// NOTE: This field does not exist in the Docker v2 image manifest
	// specification. It is the parsed version of 'v1Compatibility'
	// above (which is a raw JSON).
	V1               *docker_spec_v1.ImageManifest `protobuf:"bytes,2,opt,name=v1" json:"v1,omitempty"`
	XXX_unrecognized []byte                        `json:"-"`
}

func (m *ImageManifest_History) Reset()                    { *m = ImageManifest_History{} }
func (m *ImageManifest_History) String() string            { return proto.CompactTextString(m) }
func (*ImageManifest_History) ProtoMessage()               {}
func (*ImageManifest_History) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 1} }

func (m *ImageManifest_History) GetV1Compatibility() string {
	if m != nil && m.V1Compatibility != nil {
		return *m.V1Compatibility
	}
	return ""
}

func (m *ImageManifest_History) GetV1() *docker_spec_v1.ImageManifest {
	if m != nil {
		return m.V1
	}
	return nil
}

type ImageManifest_Signature struct {
	Header           *ImageManifest_Signature_Header `protobuf:"bytes,1,req,name=header" json:"header,omitempty"`
	Signature        *string                         `protobuf:"bytes,2,req,name=signature" json:"signature,omitempty"`
	Protected        *string                         `protobuf:"bytes,3,req,name=protected" json:"protected,omitempty"`
	XXX_unrecognized []byte                          `json:"-"`
}

func (m *ImageManifest_Signature) Reset()                    { *m = ImageManifest_Signature{} }
func (m *ImageManifest_Signature) String() string            { return proto.CompactTextString(m) }
func (*ImageManifest_Signature) ProtoMessage()               {}
func (*ImageManifest_Signature) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 2} }

func (m *ImageManifest_Signature) GetHeader() *ImageManifest_Signature_Header {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ImageManifest_Signature) GetSignature() string {
	if m != nil && m.Signature != nil {
		return *m.Signature
	}
	return ""
}

func (m *ImageManifest_Signature) GetProtected() string {
	if m != nil && m.Protected != nil {
		return *m.Protected
	}
	return ""
}

// The JSON Web Signature. For more detail please see:
// http://self-issued.info/docs/draft-ietf-jose-json-web-signature.html
type ImageManifest_Signature_Header struct {
	Jwk              *ImageManifest_Signature_Header_Jwk `protobuf:"bytes,1,opt,name=jwk" json:"jwk,omitempty"`
	Alg              *string                             `protobuf:"bytes,2,req,name=alg" json:"alg,omitempty"`
	XXX_unrecognized []byte                              `json:"-"`
}

func (m *ImageManifest_Signature_Header) Reset()         { *m = ImageManifest_Signature_Header{} }
func (m *ImageManifest_Signature_Header) String() string { return proto.CompactTextString(m) }
func (*ImageManifest_Signature_Header) ProtoMessage()    {}
func (*ImageManifest_Signature_Header) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 2, 0}
}

func (m *ImageManifest_Signature_Header) GetJwk() *ImageManifest_Signature_Header_Jwk {
	if m != nil {
		return m.Jwk
	}
	return nil
}

func (m *ImageManifest_Signature_Header) GetAlg() string {
	if m != nil && m.Alg != nil {
		return *m.Alg
	}
	return ""
}

// The JSON Web Key. For more detail please see:
// https://tools.ietf.org/html/rfc7517 for more
type ImageManifest_Signature_Header_Jwk struct {
	Crv              *string `protobuf:"bytes,1,opt,name=crv" json:"crv,omitempty"`
	Kid              *string `protobuf:"bytes,2,opt,name=kid" json:"kid,omitempty"`
	Kty              *string `protobuf:"bytes,3,req,name=kty" json:"kty,omitempty"`
	X                *string `protobuf:"bytes,4,opt,name=x" json:"x,omitempty"`
	Y                *string `protobuf:"bytes,5,opt,name=y" json:"y,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ImageManifest_Signature_Header_Jwk) Reset()         { *m = ImageManifest_Signature_Header_Jwk{} }
func (m *ImageManifest_Signature_Header_Jwk) String() string { return proto.CompactTextString(m) }
func (*ImageManifest_Signature_Header_Jwk) ProtoMessage()    {}
func (*ImageManifest_Signature_Header_Jwk) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{0, 2, 0, 0}
}

func (m *ImageManifest_Signature_Header_Jwk) GetCrv() string {
	if m != nil && m.Crv != nil {
		return *m.Crv
	}
	return ""
}

func (m *ImageManifest_Signature_Header_Jwk) GetKid() string {
	if m != nil && m.Kid != nil {
		return *m.Kid
	}
	return ""
}

func (m *ImageManifest_Signature_Header_Jwk) GetKty() string {
	if m != nil && m.Kty != nil {
		return *m.Kty
	}
	return ""
}

func (m *ImageManifest_Signature_Header_Jwk) GetX() string {
	if m != nil && m.X != nil {
		return *m.X
	}
	return ""
}

func (m *ImageManifest_Signature_Header_Jwk) GetY() string {
	if m != nil && m.Y != nil {
		return *m.Y
	}
	return ""
}

func init() {
	proto.RegisterType((*ImageManifest)(nil), "docker.spec.v2.ImageManifest")
	proto.RegisterType((*ImageManifest_FsLayer)(nil), "docker.spec.v2.ImageManifest.FsLayer")
	proto.RegisterType((*ImageManifest_History)(nil), "docker.spec.v2.ImageManifest.History")
	proto.RegisterType((*ImageManifest_Signature)(nil), "docker.spec.v2.ImageManifest.Signature")
	proto.RegisterType((*ImageManifest_Signature_Header)(nil), "docker.spec.v2.ImageManifest.Signature.Header")
	proto.RegisterType((*ImageManifest_Signature_Header_Jwk)(nil), "docker.spec.v2.ImageManifest.Signature.Header.Jwk")
}

func init() { proto.RegisterFile("mesos/docker/v2.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 431 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x52, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x55, 0x92, 0xd2, 0x90, 0xdb, 0x15, 0xd0, 0x95, 0x90, 0xac, 0x08, 0xa4, 0x6a, 0x80, 0xc8,
	0x0b, 0x9e, 0x92, 0x1f, 0x40, 0x08, 0x34, 0xc6, 0x04, 0x2f, 0x9e, 0x04, 0xcf, 0x6e, 0xea, 0xb5,
	0xa6, 0x4d, 0x5d, 0xd9, 0x5e, 0xb6, 0x7c, 0x0f, 0x5f, 0xc1, 0x37, 0xf0, 0x53, 0xc8, 0x8e, 0xdb,
	0x91, 0x3d, 0xa0, 0xed, 0xed, 0xfa, 0xdc, 0x73, 0xee, 0x3d, 0xd7, 0x3a, 0xf0, 0xbc, 0x11, 0x46,
	0x99, 0x93, 0x85, 0xaa, 0xd7, 0x42, 0x9f, 0xb4, 0x15, 0xdd, 0x69, 0x65, 0x15, 0x3e, 0xe9, 0x01,
	0x6a, 0x76, 0xa2, 0xa6, 0x6d, 0x95, 0xdf, 0xa1, 0x95, 0x3d, 0xed, 0xf8, 0xd7, 0x18, 0xa6, 0x5f,
	0x1a, 0xbe, 0x14, 0xdf, 0xf8, 0x56, 0x5e, 0x0a, 0x63, 0x11, 0x61, 0xb4, 0xe5, 0x8d, 0x20, 0xd1,
	0x2c, 0x2e, 0x32, 0xe6, 0x6b, 0x7c, 0x06, 0x89, 0xe5, 0x4b, 0x12, 0x7b, 0xc8, 0x95, 0x78, 0x0c,
	0x47, 0x5c, 0xd7, 0x2b, 0x69, 0x45, 0x6d, 0xaf, 0xb4, 0x20, 0x89, 0x6f, 0x0d, 0x30, 0xfc, 0x00,
	0x8f, 0x2f, 0xcd, 0x57, 0xde, 0x09, 0x6d, 0xc8, 0x68, 0x96, 0x14, 0x93, 0xea, 0x0d, 0x1d, 0xba,
	0xa2, 0x83, 0xd5, 0xf4, 0xb4, 0x67, 0xb3, 0x83, 0x0c, 0xdf, 0x43, 0xba, 0x92, 0xc6, 0x2a, 0xdd,
	0x91, 0x47, 0xf7, 0x99, 0x70, 0xd6, 0x93, 0xd9, 0x5e, 0x85, 0xaf, 0x61, 0x6a, 0xea, 0x95, 0x68,
	0xf8, 0x77, 0xa1, 0x8d, 0x54, 0x5b, 0x32, 0x9e, 0xc5, 0xc5, 0x94, 0x0d, 0x41, 0xfc, 0x0c, 0x60,
	0xe4, 0x72, 0xcb, 0x9d, 0x6d, 0x43, 0x52, 0xbf, 0xe9, 0xed, 0xff, 0x37, 0x5d, 0xec, 0xf9, 0xec,
	0x1f, 0x69, 0xfe, 0x0a, 0xd2, 0x70, 0x04, 0x12, 0x48, 0xe7, 0x1b, 0x35, 0xbf, 0xb8, 0x6a, 0xc2,
	0x57, 0xee, 0x9f, 0xf9, 0x1c, 0xd2, 0xe0, 0x13, 0x0b, 0x78, 0xda, 0x96, 0x1f, 0x55, 0xb3, 0xe3,
	0x56, 0xce, 0xe5, 0x46, 0xda, 0x2e, 0x90, 0xef, 0xc2, 0xf8, 0x0e, 0xe2, 0xb6, 0x24, 0xf1, 0x2c,
	0x2a, 0x26, 0xd5, 0xcb, 0xa1, 0xb5, 0x72, 0x68, 0x8d, 0xc5, 0x6d, 0x99, 0xff, 0x89, 0x21, 0x3b,
	0x58, 0xc4, 0x53, 0x18, 0xaf, 0x04, 0x5f, 0x08, 0xed, 0xa7, 0x4f, 0x2a, 0x7a, 0xcf, 0xdb, 0xe8,
	0x99, 0x57, 0xb1, 0xa0, 0xc6, 0x17, 0x90, 0x1d, 0x8e, 0x0d, 0x69, 0xb8, 0x05, 0x5c, 0xd7, 0x85,
	0x4a, 0xd4, 0x56, 0x2c, 0x42, 0x20, 0x6e, 0x81, 0xfc, 0x77, 0x04, 0xe3, 0x7e, 0x1c, 0x7e, 0x82,
	0xe4, 0xe7, 0xf5, 0x9a, 0x44, 0xfe, 0x98, 0xea, 0x61, 0x5e, 0xe8, 0xf9, 0xf5, 0x9a, 0x39, 0xb9,
	0x0b, 0x25, 0xdf, 0x1c, 0x42, 0xc9, 0x37, 0xcb, 0xfc, 0x07, 0x24, 0xe7, 0x7d, 0xa3, 0xd6, 0xad,
	0x1f, 0x9f, 0x31, 0x57, 0x3a, 0x64, 0x2d, 0x17, 0xfe, 0xf7, 0x32, 0xe6, 0x4a, 0x8f, 0xd8, 0x2e,
	0xb8, 0x74, 0x25, 0x1e, 0x41, 0x74, 0x43, 0x46, 0x9e, 0x11, 0xdd, 0xb8, 0x97, 0x8b, 0x9c, 0x7f,
	0x75, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x20, 0xcb, 0x5b, 0x22, 0x64, 0x03, 0x00, 0x00,
}
